ctit088
	Adding nVidia Cuda Toolkit 10.1
Gpu devices                 : 2
Starting worker: 
/tmp/slurmd/job220132/slurm_script: line 20: ./gpu_burn: No such file or directory
Train Set:  160
Validation Set:  40
Test Set:  100
cuda
Model loaded from best_model.pt
** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 
Epoch [1/20]
Training
  0%|          | 0/80 [00:00<?, ?it/s]  0%|          | 0/80 [00:12<?, ?it/s]
Traceback (most recent call last):
  File "/home/s3075451/DLMIA/DLMIA-UNet/main.py", line 86, in <module>
    train(model=model, 
    ^^^^^^^^^^^^^^^^^^
  File "/home/s3075451/DLMIA/DLMIA-UNet/trainer.py", line 35, in train
    output = model(data)
             ^^^^^^^^^^^
  File "/home/s3075451/.conda/envs/DLMIA/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/s3075451/DLMIA/DLMIA-UNet/unet.py", line 377, in forward
    x = module(before_pool, x)
        ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/s3075451/.conda/envs/DLMIA/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/s3075451/DLMIA/DLMIA-UNet/unet.py", line 265, in forward
    merged_layer = self.concat(up_layer, cropped_encoder_layer)  # concatenation
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/s3075451/.conda/envs/DLMIA/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/s3075451/DLMIA/DLMIA-UNet/unet.py", line 120, in forward
    x = torch.cat((layer_1, layer_2), 1)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.25 GiB (GPU 0; 7.80 GiB total capacity; 6.61 GiB already allocated; 23.56 MiB free; 6.85 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
